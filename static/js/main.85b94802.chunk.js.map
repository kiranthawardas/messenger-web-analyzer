{"version":3,"sources":["MessagesPerPerson.js","DayAndTimeHeatmap.js","TotalMessagesTimeseries.js","react-heatmap-grid/FixedBox.jsx","react-heatmap-grid/XLabels.jsx","react-heatmap-grid/DataGrid.jsx","react-heatmap-grid/HeatMap.jsx","react-heatmap-grid/index.js","TotalMessagesHeatmap.js","WordFrequency.js","MessengerVis.js","App.js","serviceWorker.js","index.js"],"names":["formatHint","datapoint","format","d3","title","value","x","y","transformData","data","participants","forEach","participant","message","dataOut","Object","keys","push","sort","a","b","MessagesPerPerson","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","transformedData","hintDatapoint","prevProps","setState","_this2","react_default","createElement","es","xType","onMouseLeave","width","window","innerWidth","height","innerHeight","tickFormat","tick","onNearestX","event","React","Component","DAYS","HOURS","color","transform","0","1","2","3","4","5","6","date","Date","getDay","getHours","day","hour","DayAndTimeHeatmap","xDomain","yDomain","tickTotal","tickLabelAngle","colorRange","onNearestXY","_onNearestX","sender","index","crosshairTitleFormat","moment","isValid","crosshairItemsFormat","datapoints","retval","map","item","crosshairValues","values","totalDate","totalData","senderData","i","length","millisecond","second","minute","isSame","topSenders","palette","DistinctColors","count","lightMin","lightMax","TotalMessagesTimeseries","renderSeries","bind","assertThisInitialized","renderLegend","renderCrosshair","className","itemsFormat","titleFormat","items","css","orientation","key","info","size","FixedBox","_ref","children","style","flex","concat","defaultProps","XLabels","labels","labelsVisibility","squares","yWidth","display","react_heatmap_grid_FixedBox","textAlign","visibility","DataGrid","xLabels","yLabels","yLabelWidth","xLabelWidth","background","yLabelTextAlign","unit","displayYLabels","onClick","onMouseOver","cursor","cellRender","cellStyle","flatArray","reduce","o","toConsumableArray","max","Math","apply","min","yi","paddingRight","paddingTop","xi","assign","margin","undefined","HeatMap","xLabelsLocation","xLabelsVisibility","xLabelsEle","react_heatmap_grid_XLabels","react_heatmap_grid_DataGrid","opacity","locale","MONTHS","dates","year","weekday","week","weekYear","endOfYear","month","weeksInYear","Array","fill","TotalMessagesHeatmap","obj","modalCoords","cellHover","console","log","hoverInfo","react_heatmap_grid","modalOpen","STOP_WORDS","Set","PROTECTED_KEYWORDS","wordFreq","wordCounts","wordCountsPerSender","stringIn","retVal","keyword","includes","containsProtectedWords","formatString","trim","replace","split","word","currentWord","toLowerCase","has","utf8","decode","err","topWords","sortTotals","slice","barSeriesData","WordFrequency","renderPlot","renderHint","stackBy","formattedHint","Visualization","selection","src_MessagesPerPerson","src_DayAndTimeHeatmap","src_WordFrequency","src_TotalMessagesTimeseries","src_TotalMessagesHeatmap","MessengerVis","visualization","MENU_ITEMS","WelcomeScreen","active","Jumbotron","bsStyle","onChange","type","ReselectBar","displayChatName","chatName","substring","id","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","onChangeVisualization","href","onChangeFile","App","file","onFileSelect","onVisualizationSelect","document","src_MessengerVis","e","target","files","fr","FileReader","readAsText","alert","onload","JSON","parse","result","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.85b94802.chunk.js","sourcesContent":["\nimport React from 'react'\nimport '../node_modules/react-vis/dist/style.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './style.css';\nimport * as d3 from 'd3-format'\nimport { Hint, XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines, VerticalBarSeriesCanvas } from 'react-vis';\n\nclass MessagesPerPerson extends React.Component {\n    // All this stuff is pretty boilerplate except for the hintDatapoint state element which is used for this react-vis element\n    constructor(props) {\n        super(props);\n        this.state = {\n            transformedData: transformData(props.data),\n            hintDatapoint: null\n            // add state variables as needed\n        }\n    }\n\n    // ensures that component updates as data is taken in from file\n    componentDidUpdate(prevProps) {\n        if (this.props.data !== prevProps.data) {\n            this.setState({ transformedData: transformData(this.props.data) });\n        }\n    }\n    // end basic boilerplate stuff\n\n    render() {\n        if (this.props.data == null) {\n            return null;\n        }\n        return (\n            <div>\n                <XYPlot xType={'ordinal'}\n                    onMouseLeave={() => {\n                        this.setState({ hintDatapoint: null })\n                    }}\n                    width={window.innerWidth * 0.9}\n                    height={window.innerHeight * 0.85}>\n                    <VerticalGridLines />\n                    <HorizontalGridLines />\n                    <XAxis />\n                    <YAxis tickFormat={tick => d3.format('.2s')(tick)} />\n                    <VerticalBarSeriesCanvas\n                        onNearestX={(datapoint, event) => {\n                            this.setState({ hintDatapoint: datapoint });\n                        }}\n                        data={this.state.transformedData} />\n                    {this.state.hintDatapoint ? <Hint value={this.state.hintDatapoint} format={formatHint} /> : null}\n                </XYPlot>\n            </div>\n        )\n    }\n}\n\nfunction formatHint(datapoint) {\n    let format = d3.format(\",\");\n    return [\n        {\n            \"title\": \"Sender\", \"value\": datapoint.x\n        },\n        {\n            \"title\": \"Messages\", \"value\": format(datapoint.y)\n        }\n    ]\n}\n\nfunction transformData(data) {\n    if (!data) return [];\n    let participants = {};\n    data[\"participants\"].forEach(function (participant) {\n        participants[participant[\"name\"]] = 0;\n    })\n    data[\"messages\"].forEach(function (message) {\n        participants[message[\"sender_name\"]]++;\n    })\n    let dataOut = [];\n    Object.keys(participants).forEach(function (participant) {\n        dataOut.push({ x: participant, y: participants[participant] });\n    })\n\n    return dataOut.sort(\n        (a, b) =>\n            b[\"y\"] -\n            a[\"y\"]);\n}\nexport default MessagesPerPerson;","\nimport React from 'react'\nimport '../node_modules/react-vis/dist/style.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './style.css';\nimport * as d3 from 'd3-format'\nimport { XYPlot, XAxis, YAxis, HeatmapSeries, Hint } from 'react-vis';\n\nconst DAYS = [\"Sun\", \"Mon\", \"Tues\", \"Wed\", \"Thurs\", \"Fri\", \"Sat\"];\nconst HOURS = [\"12 AM\", \"1 AM\", \"2 AM\", \"3 AM\", \"4 AM\", \"5 AM\", \"6 AM\", \"7 AM\", \"8 AM\", \"9 AM\", \"10 AM\", \"11 AM\",\n    \"12 PM\", \"2 PM\", \"3 PM\", \"4 PM\", \"5 PM\", \"6 PM\", \"7 PM\", \"8 PM\", \"9 PM\", \"10 PM\", \"11 PM\", \"12 PM\"];\n\nclass DayAndTimeHeatmap extends React.Component {\n    // All this stuff is pretty boilerplate except for the hintDatapoint state element which is used for this react-vis element\n    constructor(props) {\n        super(props);\n        this.state = {\n            transformedData: transformData(props.data),\n            hintDatapoint: null\n            // add state variables as needed\n        }\n    }\n\n    // ensures that component updates as data is taken in from file\n    componentDidUpdate(prevProps) {\n        if (this.props.data !== prevProps.data) {\n            this.setState({ transformedData: transformData(this.props.data) });\n        }\n    }\n    // end basic boilerplate stuff\n\n    render() {\n        if (this.props.data == null) {\n            return null;\n        }\n        return (\n            <div>\n                <XYPlot\n                    onMouseLeave={() => {\n                        this.setState({ hintDatapoint: null })\n                    }}\n                    width={window.innerWidth * .9}\n                    height={window.innerHeight * 0.85}\n                    xDomain={[0, 23]}\n                    yDomain={[0, 6]}>\n                    <XAxis\n                        xDomain={[0, 23]}\n                        tickTotal={24}\n                        tickLabelAngle={-45}\n                        tickFormat={value => HOURS[value]} />\n                    <YAxis\n                        yDomain={[0, 6]}\n                        tickTotal={7}\n                        tickFormat={value => DAYS[value]} />\n                    <HeatmapSeries\n                        colorRange={[\"#f4f9ff\", \"#003268\"]}\n                        xDomain={[0, 23]} yDomain={[0, 6]}\n                        data={this.state.transformedData}\n                        onNearestXY={(datapoint, event) => {\n                            this.setState({\n                                hintDatapoint: datapoint\n                            });\n                        }}\n                    />\n                    {this.state.hintDatapoint ?\n                        <Hint value={this.state.hintDatapoint} format={formatHint}></Hint> : null}\n                </XYPlot>\n            </div>\n        )\n    }\n}\n\nfunction formatHint(datapoint) {\n    let format = d3.format(\",\");\n    return [\n        { \"title\": \"Day\", \"value\": DAYS[datapoint.y] },\n        { \"title\": \"Hour\", \"value\": HOURS[datapoint.x] },\n        { \"title\": \"Messages\", \"value\": format(datapoint.color) }\n    ]\n}\n\nfunction transformData(data) {\n    if (!data) return [];\n    let transform = { 0: {}, 1: {}, 2: {}, 3: {}, 4: {}, 5: {}, 6: {} };\n    data[\"messages\"].forEach(function (message) {\n        var date = new Date(message[\"timestamp_ms\"]);\n        if (transform[date.getDay()][date.getHours()] == null) {\n            transform[date.getDay()][date.getHours()] = 0;\n        }\n        transform[date.getDay()][date.getHours()]++;\n    })\n    let dataOut = [];\n    Object.keys(transform).forEach(function (day) {\n        Object.keys(transform[day]).forEach(function (hour) {\n            dataOut.push({ y: day, x: hour, color: transform[day][hour] });\n        })\n    })\n    return dataOut;\n}\n\nexport default DayAndTimeHeatmap;","\nimport React from 'react'\nimport '../node_modules/react-vis/dist/style.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './style.css';\nimport * as d3 from 'd3-format'\nimport moment from 'moment'\nimport DistinctColors from 'distinct-colors'\nimport { XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines, DiscreteColorLegend, Crosshair, LineMarkSeries } from 'react-vis';\n\nclass TotalMessagesTimeseries extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hintDatapoint: {},\n            senderData: null,\n            totalData: null,\n            topSenders: [],\n            palette: null\n        }\n        this.renderSeries = this.renderSeries.bind(this);\n        this.renderLegend = this.renderLegend.bind(this);\n        this.renderCrosshair = this.renderCrosshair.bind(this);\n    }\n\n    componentDidMount() {\n        transformData(this, this.props.data);\n    }\n\n    // ensures that component updates as data is taken in from file\n    componentDidUpdate(prevProps) {\n        if (this.props.data !== prevProps.data) {\n            transformData(this, this.props.data);\n        }\n    }\n\n    render() {\n        if (!this.props.data) {\n            return null;\n        }\n        return (\n            <div className=\"visualization-with-legend\">\n                <XYPlot\n                    xType=\"time\"\n                    width={window.innerWidth * 0.8}\n                    height={window.innerHeight * 0.85}\n                    onMouseLeave={() => {\n                        this.setState({ hintDatapoint: null })\n                    }}\n                >\n                    <VerticalGridLines />\n                    <HorizontalGridLines />\n                    <XAxis\n                        tickTotal={3} />\n                    <YAxis tickFormat={tick => d3.format('.2s')(tick)} />\n                    {this.renderSeries()}\n                    {this.renderCrosshair()}\n                </XYPlot>\n                {this.renderLegend()}\n            </div>\n        )\n    }\n\n    renderCrosshair() {\n        if (this.state.hintDatapoint) {\n            return (\n                <Crosshair\n                    values={crosshairValues(this, this.state.hintDatapoint)}\n                    itemsFormat={crosshairItemsFormat}\n                    titleFormat={crosshairTitleFormat}\n                />\n            )\n        }\n        else return null;\n    }\n    renderLegend() {\n        if (this.state.topSenders.length > 0) {\n            let items = [{ title: \"Total\", color: \"#000000\" }]\n            for (let i = 0; i < this.state.topSenders.length; i++) {\n                items.push({ title: this.state.topSenders[i], color: this.state.palette[i].css() })\n            }\n            return (\n                <DiscreteColorLegend\n                    orientation={'vertical'}\n                    width={window.innerWidth * 0.2}\n                    height={window.innerHeight * 0.85}\n                    items={items}\n                />\n            )\n        }\n    }\n\n    renderSeries() {\n        if (!this.state.senderData || !this.state.totalData) return null;\n        let _this = this;\n        let retval = [];\n        retval.push(\n            <LineMarkSeries\n                key=\"Total\"\n                onNearestX={(datapoint, info) => {\n                    _onNearestX(_this, \"Total\", info.index);\n                }}\n                color=\"black\"\n                size={0}\n                data={this.state.totalData} />\n        )\n\n        let i = 0;\n        this.state.topSenders.forEach(function (sender) {\n            retval.push(\n                <LineMarkSeries\n                    key={sender}\n                    size={0}\n                    color={_this.state.palette[i++]}\n                    onNearestX={(datapoint, info) => {\n                        _onNearestX(_this, sender, info.index);\n                    }}\n                    data={_this.state.senderData[sender]} />\n            )\n        })\n        return retval;\n    }\n\n}\n\n\n// TODO: save index, check in crosshairTitleFormat if date is right of crosshair date, \n//      if so, find closest datapoint before that date and use it instead\nfunction _onNearestX(_this, sender, index) {\n    let hintDatapoint = _this.state.hintDatapoint;\n    if (!hintDatapoint) {\n        hintDatapoint = {}\n    }\n    hintDatapoint[sender] = index;\n    _this.setState({ hintDatapoint: hintDatapoint })\n}\n\nfunction crosshairTitleFormat(datapoint) {\n    if (!moment(datapoint[0][\"x\"]).isValid()) {\n        return ({})\n    }\n    return ({\n        title: \"Date\", value: moment(datapoint[0][\"x\"]).format(\"MMM DD, YYYY\")\n    })\n}\n\nfunction crosshairItemsFormat(datapoints) {\n    let format = d3.format(\",\");\n    let retval = datapoints.map(function (datapoint) {\n        return ({\n            title: datapoint[\"sender\"], value: (datapoint[\"y\"])\n        })\n    })\n    retval = retval.sort((a, b) => b[\"value\"] - a[\"value\"]);\n    return retval.map(function (item) {\n        return ({\n            title: item[\"title\"], value: format(item[\"value\"])\n        })\n    })\n}\n\nfunction crosshairValues(_this, datapoint) {\n    if (!datapoint || !datapoint[\"Total\"]) {\n        return []\n    }\n    let values = [];\n    let totalDate = _this.state.totalData[datapoint[\"Total\"]][\"x\"];\n    values.push({ x: totalDate, y: _this.state.totalData[datapoint[\"Total\"]][\"y\"], sender: \"Total\" });\n    Object.keys(datapoint).forEach(function (sender) {\n        if (sender !== \"Total\") {\n            let index = datapoint[sender];\n            while (index >= 0 && _this.state.senderData[sender][index][\"x\"] > totalDate) {\n                index--;\n            }\n            if (index < 0) {\n                values.push({ x: totalDate, y: 0, sender: sender })\n            }\n            else {\n                values.push({ x: totalDate, y: _this.state.senderData[sender][index][\"y\"], sender: sender });\n            }\n        }\n    })\n    return values;\n}\n\nfunction transformData(_this, data) {\n    if (data == null) return null;\n    let totalData = [];\n    let senderData = {}\n    for (let i = data[\"messages\"].length - 1; i >= 0; i--) {\n        let date = moment(data[\"messages\"][i][\"timestamp_ms\"]).millisecond(0).second(0).minute(0).hour(0);\n\n        if (totalData.length === 0) {\n            totalData.push({ x: date, y: 1 })\n        }\n        else if (totalData[totalData.length - 1][\"x\"].isSame(date)) {\n            totalData[totalData.length - 1][\"y\"]++;\n        }\n        else {\n            totalData.push({ x: date, y: totalData[totalData.length - 1][\"y\"] });\n        }\n\n        let sender = data[\"messages\"][i][\"sender_name\"];\n        if (!senderData[sender]) {\n            senderData[sender] = [{ x: date, y: 1 }];\n        }\n        else if (senderData[sender][senderData[sender].length - 1][\"x\"].isSame(date)) {\n            senderData[sender][senderData[sender].length - 1][\"y\"]++;\n        }\n        else {\n            senderData[sender].push({ x: date, y: senderData[sender][senderData[sender].length - 1][\"y\"] + 1 });\n        }\n    }\n\n    let topSenders = Object.keys(\n        senderData).sort(\n            (a, b) =>\n                senderData[b][senderData[b].length - 1][\"y\"] -\n                senderData[a][senderData[a].length - 1][\"y\"]);\n\n    let palette = new DistinctColors({ count: topSenders.length, lightMin: 40, lightMax: 100 });\n    _this.setState({ senderData: senderData, totalData: totalData, topSenders: topSenders, hintDatapoint: {}, palette: palette });\n}\nexport default TotalMessagesTimeseries;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst FixedBox = ({ children, width }) => {\n  return <div style={{ flex: `0 0 ${width}px` }}> {children} </div>;\n};\n\nFixedBox.defaultProps = {\n  children: \" \",\n};\n\nFixedBox.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  width: PropTypes.number.isRequired,\n};\n\nexport default FixedBox;\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport FixedBox from \"./FixedBox\";\n\nfunction XLabels({ labels, width, labelsVisibility, squares, height, yWidth }) {\n  return (\n    <div style={{ display: \"flex\" }}>\n      <FixedBox width={yWidth} />\n      {labels.map((x, i) => (\n        <div\n          key={i}\n          style={{\n            flex: squares ? \"none\" : 1,\n            textAlign: \"center\",\n            width: squares ? `${height + 1}px` : \"undefined\",\n            visibility:\n              labelsVisibility && !labelsVisibility[i] ? \"hidden\" : \"visible\",\n          }}\n        >\n          {x}\n        </div>\n      ))}\n    </div>\n  );\n}\n\nXLabels.propTypes = {\n  labels: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.object])\n  ).isRequired,\n  labelsVisibility: PropTypes.arrayOf(PropTypes.bool),\n  width: PropTypes.number.isRequired,\n  squares: PropTypes.bool,\n  height: PropTypes.number,\n};\n\nXLabels.defaultProps = {\n  labelsVisibility: null,\n  squares: false,\n  height: 30,\n};\n\nexport default XLabels;\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport FixedBox from \"./FixedBox\";\n\nconst DataGrid = ({\n  xLabels,\n  yLabels,\n  data,\n  xLabelWidth,\n  yLabelWidth,\n  background,\n  height,\n  yLabelTextAlign,\n  unit,\n  displayYLabels,\n  onClick,\n  onMouseOver,\n  cursor,\n  squares,\n  cellRender,\n  cellStyle,\n}) => {\n  const flatArray = data.reduce((i, o) => [...o, ...i], []);\n  const max = Math.max(...flatArray);\n  const min = Math.min(...flatArray);\n  return (\n    <div>\n      {yLabels.map((y, yi) => (\n        <div key={yi} style={{ display: \"flex\" }}>\n          <FixedBox width={yLabelWidth}>\n            <div\n              style={{\n                textAlign: yLabelTextAlign,\n                paddingRight: \"5px\",\n                paddingTop: `${height / 3.7}px`,\n                width: `${yLabelWidth}px`\n              }}\n            >\n              {displayYLabels && y}\n            </div>\n          </FixedBox>\n          {xLabels.map((x, xi) => {\n            const value = data[yi][xi];\n            const style = Object.assign(\n              {\n                cursor: `${cursor}`,\n                margin: \"1px 1px 0 0\",\n                height,\n                width: squares ? `${height}px` : undefined,\n                flex: squares ? \"none\" : 1,\n                textAlign: \"center\",\n              },\n              cellStyle(background, value, min, max, data, xi, yi)\n            );\n            return (\n              <div\n                onMouseOver={onMouseOver.bind(this, xi, yi)}\n                onClick={onClick.bind(this, xi, yi)}\n                title={(value || value === 0) && `${value} ${unit}`}\n                key={`${xi}_${yi}`}\n                style={style}\n              >\n                <div style={{ paddingTop: `${height / 3.7}px` }}>\n                  {cellRender(value)}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nDataGrid.propTypes = {\n  xLabels: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.object])\n  ).isRequired,\n  yLabels: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.object])\n  ).isRequired,\n  data: PropTypes.arrayOf(PropTypes.array).isRequired,\n  background: PropTypes.string.isRequired,\n  height: PropTypes.number.isRequired,\n  xLabelWidth: PropTypes.number.isRequired,\n  yLabelWidth: PropTypes.number.isRequired,\n  yLabelTextAlign: PropTypes.string.isRequired,\n  unit: PropTypes.string.isRequired,\n  displayYLabels: PropTypes.bool,\n  onClick: PropTypes.func,\n  onMouseOver: PropTypes.func,\n  cursor: PropTypes.string,\n  squares: PropTypes.bool,\n  cellRender: PropTypes.func.isRequired,\n  cellStyle: PropTypes.func.isRequired,\n};\n\nDataGrid.defaultProps = {\n  displayYLabels: true,\n  cursor: \"\",\n  onClick: () => { },\n  onMouseOver: () => { },\n  squares: false,\n};\n\nexport default DataGrid;\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport XLabels from \"./XLabels\";\nimport DataGrid from \"./DataGrid\";\n\nfunction HeatMap({\n  xLabels,\n  yLabels,\n  data,\n  background,\n  height,\n  xLabelWidth,\n  yLabelWidth,\n  xLabelsLocation,\n  yLabelTextAlign,\n  xLabelsVisibility,\n  unit,\n  displayYLabels,\n  onClick,\n  onMouseOver,\n  squares,\n  cellRender,\n  cellStyle,\n}) {\n  let cursor = \"\";\n  if (onClick !== undefined) {\n    cursor = \"pointer\";\n  }\n  const xLabelsEle = (\n    <XLabels\n      labels={xLabels}\n      width={xLabelWidth}\n      labelsVisibility={xLabelsVisibility}\n      height={height}\n      squares={squares}\n      yWidth={yLabelWidth}\n    />\n  );\n  return (\n    <div>\n      {xLabelsLocation === \"top\" && xLabelsEle}\n      <DataGrid\n        {...{\n          xLabels,\n          yLabels,\n          data,\n          background,\n          height,\n          xLabelWidth,\n          yLabelWidth,\n          yLabelTextAlign,\n          unit,\n          xLabelsLocation,\n          displayYLabels,\n          onClick,\n          onMouseOver,\n          cursor,\n          squares,\n          cellRender,\n          cellStyle,\n        }}\n      />\n      {xLabelsLocation === \"bottom\" && xLabelsEle}\n    </div>\n  );\n}\n\nHeatMap.propTypes = {\n  xLabels: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.object])\n  ).isRequired,\n  yLabels: PropTypes.arrayOf(\n    PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.object])\n  ).isRequired,\n  data: PropTypes.arrayOf(PropTypes.array).isRequired,\n  background: PropTypes.string,\n  height: PropTypes.number,\n  xLabelWidth: PropTypes.number,\n  yLabelWidth: PropTypes.number,\n  xLabelsLocation: PropTypes.oneOf([\"top\", \"bottom\"]),\n  xLabelsVisibility: PropTypes.arrayOf(PropTypes.bool),\n  yLabelTextAlign: PropTypes.string,\n  displayYLabels: PropTypes.bool,\n  unit: PropTypes.string,\n  onClick: PropTypes.func,\n  onMouseOver: PropTypes.func,\n  squares: PropTypes.bool,\n  cellRender: PropTypes.func,\n  cellStyle: PropTypes.func,\n};\n\nHeatMap.defaultProps = {\n  background: \"#329fff\",\n  height: 30,\n  xLabelWidth: 60,\n  yLabelWidth: 40,\n  yLabelTextAlign: \"right\",\n  unit: \"\",\n  xLabelsLocation: \"top\",\n  xLabelsVisibility: null,\n  displayYLabels: true,\n  onClick: undefined,\n  onMouseOver: undefined,\n  squares: false,\n  cellRender: () => null,\n  cellStyle: (background, value, min, max) => ({\n    background,\n    opacity: (value - min) / (max - min) || 0,\n  }),\n};\n\nexport default HeatMap;\n\n","import HeatMap from './HeatMap';\n\nexport default HeatMap;\n","\nimport React from 'react'\nimport '../node_modules/react-vis/dist/style.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './style.css';\nimport HeatMap from './react-heatmap-grid/index.js'\nimport moment from 'moment'\n\nmoment.locale('en-us')\nconst yLabels = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\nconst MONTHS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\n\nclass TotalMessagesHeatmap extends React.Component {\n    // All this stuff is pretty boilerplate except for the hintDatapoint state element which is used for this react-vis element\n    constructor(props) {\n        super(props);\n        let obj = transformData(props.data)\n        this.state = {\n            transformedData: obj.dataOut,\n            dates: obj.dates,\n            hintDatapoint: {},\n            modalCoords: null\n            // add state variables as needed\n        }\n        this.cellHover = this.cellHover.bind(this);\n    }\n\n    // ensures that component updates as data is taken in from file\n    componentDidUpdate(prevProps) {\n        if (this.props.data !== prevProps.data) {\n            let obj = transformData(this.props.data);\n            console.log(obj);\n            this.setState({ transformedData: obj.dataOut, dates: obj.dates });\n        }\n    }\n    // end basic boilerplate stuff\n\n    render() {\n        if (this.props.data == null) {\n            return null;\n        }\n        return (\n            <div>\n                {this.renderSeries()}\n            </div>\n        )\n    }\n\n    renderSeries() {\n        let _this = this;\n        let series = Object.keys(this.state.transformedData).map(function (year) {\n            let xLabels = new Array(53).fill(\"\");\n            for (let i = 0; i < 12; i++) {\n                let weekNum = moment().year(year).month(i).date(1).week() - 1;\n                xLabels[weekNum] = MONTHS[i];\n            }\n            return (\n                <div key={year} className=\"total-messages-heatmap-container\">\n                    <h4 key={year + \"div\"}>\n                        <span>\n                            {year}\n                        </span>\n                        {_this.state.hoverInfo && _this.state.hoverInfo.year === year ?\n                            <span className=\"header-data\">\n                                {_this.state.hoverInfo.count + \" messages on \" + moment(_this.state.hoverInfo.date).format(\"dddd, MM/DD/YY\")}\n                            </span>\n                            : null}\n                    </h4>\n                    <HeatMap\n                        key={year}\n                        background=\"#003268\"\n                        xLabels={xLabels}\n                        yLabels={yLabels}\n                        xLabelsLocation={\"bottom\"}\n                        unit={\"messages\" + (_this.state.hoverInfo && _this.state.hoverInfo.year === year ? \" on \" + moment(_this.state.hoverInfo.date).format(\"dddd, MM/DD/YY\") : \"\")}\n                        onClick={(x, y) => _this.setState({ modalCoords: { x: x, y: y, year: year }, modalOpen: true })}\n                        data={_this.state.transformedData[year]}\n                        onMouseOver={(x, y) => _this.cellHover(year, x, y)}\n                    />\n                </div>\n            )\n        })\n        return series;\n    }\n\n    cellHover(year, x, y) {\n        if (this.state.dates[year][y][x] === 0) {\n            return null;\n        }\n        else {\n            let obj =\n            {\n                date: this.state.dates[year][y][x],\n                year: year,\n                count: this.state.transformedData[year][y][x]\n            }\n            this.setState({ hoverInfo: obj })\n        }\n    }\n\n}\n\nfunction transformData(data) {\n    if (!data) return { dataOut: null, dates: null }\n    let dataOut = {};\n    let dates = {};\n    for (let i = data[\"messages\"].length - 1; i >= 0; i--) {\n        let year = moment(data[\"messages\"][i][\"timestamp_ms\"]).year();\n        let weekday = moment(data[\"messages\"][i][\"timestamp_ms\"]).weekday();\n        let week = moment(data[\"messages\"][i][\"timestamp_ms\"]).week() - 1;\n        if (year !== moment(data[\"messages\"][i][\"timestamp_ms\"]).weekYear()) {\n            week = 52;\n        }\n        if (!dataOut[year]) {\n            let endOfYear = moment().year(year).month(11).day(31);\n            let weeksInYear = 52;\n            if (endOfYear.weekYear() !== year) {\n                weeksInYear = 53;\n            }\n            dataOut[year] = new Array(yLabels.length)\n                .fill(0)\n                .map(() => new Array(weeksInYear).fill(0));\n            dates[year] = new Array(yLabels.length)\n                .fill(0)\n                .map(() => new Array(weeksInYear).fill(0));\n        }\n        dataOut[year][weekday][week]++;\n        dates[year][weekday][week] = moment(data[\"messages\"][i][\"timestamp_ms\"]).hour(0).minute(0).second(0).millisecond(0);\n    }\n    return { dataOut: dataOut, dates: dates };\n}\n\nexport default TotalMessagesHeatmap;","\nimport React from 'react'\nimport '../node_modules/react-vis/dist/style.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport utf8 from 'utf8'\nimport './style.css';\nimport * as d3 from 'd3-format'\nimport { Hint, XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines, DiscreteColorLegend, VerticalBarSeriesCanvas } from 'react-vis';\n\nconst STOP_WORDS = new Set([\"https\", \"http\", \"www\", \"com\", \"a\", \"about\", \"above\", \"after\", \"again\", \"against\", \"all\", \"am\", \"an\", \"and\", \"any\", \"are\", \"as\", \"at\", \"be\", \"because\", \"been\", \"before\", \"being\", \"below\", \"between\", \"both\", \"but\", \"by\", \"could\", \"did\", \"do\", \"does\", \"doing\", \"down\", \"during\", \"each\", \"few\", \"for\", \"from\", \"further\", \"had\", \"has\", \"have\", \"having\", \"he\", \"he'd\", \"he'll\", \"he's\", \"her\", \"here\", \"here's\", \"hers\", \"herself\", \"him\", \"himself\", \"his\", \"how\", \"how's\", \"i\", \"i'd\", \"i'll\", \"i'm\", \"i've\", \"if\", \"in\", \"into\", \"is\", \"it\", \"it's\", \"its\", \"itself\", \"let's\", \"me\", \"more\", \"most\", \"my\", \"myself\", \"nor\", \"of\", \"on\", \"once\", \"only\", \"or\", \"other\", \"ought\", \"our\", \"ours\", \"ourselves\", \"out\", \"over\", \"own\", \"same\", \"she\", \"she'd\", \"she'll\", \"she's\", \"should\", \"so\", \"some\", \"such\", \"than\", \"that\", \"that's\", \"the\", \"their\", \"theirs\", \"them\", \"themselves\", \"then\", \"there\", \"there's\", \"these\", \"they\", \"they'd\", \"they'll\", \"they're\", \"they've\", \"this\", \"those\", \"through\", \"to\", \"too\", \"under\", \"until\", \"up\", \"very\", \"was\", \"we\", \"we'd\", \"we'll\", \"we're\", \"we've\", \"were\", \"what\", \"what's\", \"when\", \"when's\", \"where\", \"where's\", \"which\", \"while\", \"who\", \"who's\", \"whom\", \"why\", \"why's\", \"with\", \"would\", \"you\", \"you'd\", \"you'll\", \"you're\", \"you've\", \"your\", \"yours\", \"yourself\", \"yourselves\"])\nconst PROTECTED_KEYWORDS = [\"sent a photo\", \"sent an attachment\", \"sent a link\", \"sent a GIF\", \"created a poll\"];\n\nclass WordFrequency extends React.Component {\n    // All this stuff is pretty boilerplate except for the hintDatapoint state element which is used for this react-vis element\n    constructor(props) {\n        super(props);\n        this.state = {\n            hintDatapoint: null,\n            barSeriesData: null,\n            wordCountsPerSender: null,\n            topWords: null,\n        }\n        this.renderPlot = this.renderPlot.bind(this);\n        this.formatHint = this.formatHint.bind(this);\n        this.renderHint = this.renderHint.bind(this);\n        this.renderLegend = this.renderLegend.bind(this);\n    }\n\n    componentDidMount() {\n        wordFreq(this, this.props.data);\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.data !== prevProps.data) {\n            wordFreq(this, this.props.data);\n        }\n    }\n\n    render() {\n        if (this.props.data == null) {\n            return null;\n        }\n        return (\n            <div className=\"visualization-with-legend\">\n                <XYPlot xType={'ordinal'}\n                    stackBy=\"y\"\n                    onMouseLeave={() => {\n                        this.setState({ hintDatapoint: null })\n                    }}\n                    width={window.innerWidth * 0.8}\n                    height={window.innerHeight * 0.85}\n                >\n                    <VerticalGridLines />\n                    <HorizontalGridLines />\n                    <XAxis />\n                    <YAxis tickFormat={tick => d3.format('.2s')(tick)} />\n                    {this.renderPlot()}\n                    {this.renderHint()}\n                </XYPlot>\n                {this.renderLegend()}\n            </div>\n        )\n    }\n\n    renderLegend() {\n        if (this.state.wordCountsPerSender) {\n            return (\n                <DiscreteColorLegend\n                    orientation={'vertical'}\n                    width={window.innerWidth * 0.2}\n                    height={window.innerHeight * 0.85}\n                    items={Object.keys(this.state.wordCountsPerSender)}\n                />\n            )\n        }\n    }\n\n    renderHint() {\n        if (this.state.hintDatapoint) {\n            return (\n                <Hint value={this.state.hintDatapoint} format={this.formatHint} />\n            )\n        }\n        else {\n            return null;\n        }\n    }\n\n    formatHint(datapoint) {\n        let formattedHint = [\n            {\n                \"title\": \"Word\", \"value\": datapoint.x\n            }\n        ];\n        let _this = this;\n        let format = d3.format(\",\");\n        Object.keys(this.state.wordCountsPerSender).forEach(function (sender) {\n            if (!_this.state.wordCountsPerSender[sender][datapoint.x]) {\n                formattedHint.push({\n                    \"title\": sender,\n                    \"value\": 0\n                })\n            }\n            else {\n                formattedHint.push({\n                    \"title\": sender,\n                    \"value\": format(_this.state.wordCountsPerSender[sender][datapoint.x])\n                })\n            }\n        })\n        return formattedHint\n    }\n\n    renderPlot() {\n        if (!this.state.barSeriesData || !this.state.topWords) return null;\n        let _this = this;\n        return Object.keys(this.state.barSeriesData).map(function (sender) {\n            return (\n                <VerticalBarSeriesCanvas\n                    key={sender}\n                    data={_this.state.barSeriesData[sender]}\n                    onNearestX={(datapoint) => {\n                        if (!_this.state.hintDatapoint || datapoint.x !== _this.state.hintDatapoint.x) {\n                            _this.setState({ hintDatapoint: datapoint })\n                        }\n                    }}\n                />\n            )\n        })\n    }\n}\n\nfunction wordFreq(_this, data) {\n    if (data == null) return null;\n\n    let wordCounts = {}; // map (word->count)\n    let wordCountsPerSender = {}; // map (sender->word->count)\n    data[\"messages\"].forEach(function (message) {\n        if (message[\"content\"] && !containsProtectedWords(message[\"content\"])) {\n            const wordsArray = formatString(message[\"content\"]).split(/\\s+/);\n            wordsArray.forEach(function (word) {\n                let currentWord = word.trim().toLowerCase();\n                if (!STOP_WORDS.has(word.toLowerCase()) && word !== \"\") {\n                    let sender = message[\"sender_name\"]\n\n                    // attempt to decode emojis\n                    try {\n                        currentWord = utf8.decode(currentWord);\n                    }\n                    catch (err) {\n                        currentWord = word.trim().toLowerCase();\n                    }\n\n                    if (!wordCounts[currentWord]) {\n                        wordCounts[currentWord] = 0;\n                    }\n                    if (!wordCountsPerSender[sender]) {\n                        wordCountsPerSender[sender] = {};\n                    }\n                    if (!wordCountsPerSender[sender][currentWord]) {\n                        wordCountsPerSender[sender][currentWord] = 0;\n                    }\n                    wordCounts[currentWord]++;\n                    wordCountsPerSender[sender][currentWord]++;\n                }\n            })\n        }\n    })\n    // List of top 15 sorted words\n    let topWords = sortTotals(wordCounts).slice(0, 15);\n\n    let barSeriesData = transformData(topWords, wordCountsPerSender);\n\n    _this.setState({\n        topWords: topWords,\n        wordCountsPerSender: wordCountsPerSender,\n        barSeriesData: barSeriesData\n    });\n}\n\nfunction transformData(topWords, wordCountsPerSender) {\n    let barSeriesData = {};\n    topWords.forEach(function (word) {\n        Object.keys(wordCountsPerSender).forEach(function (sender) {\n            if (!barSeriesData[sender]) {\n                barSeriesData[sender] = [];\n            }\n            barSeriesData[sender].push({\n                x: word,\n                y: wordCountsPerSender[sender][word] ? wordCountsPerSender[sender][word] : 0\n            })\n        })\n    })\n    return barSeriesData;\n}\n\nfunction sortTotals(wordCounts) {\n    return Object.keys(wordCounts).sort((a, b) => wordCounts[b] - wordCounts[a]);\n}\n\nfunction formatString(stringIn) {\n    let formatString = stringIn.trim();\n    formatString = formatString.replace(/https?:\\/\\/[^\\s]+/g, \" \")\n    formatString = formatString.replace(/http?:\\/\\/[^\\s]+/g, \" \")\n    formatString = formatString.replace(/[!\"#$%&()*+,-./:;<=>?@[\\]^_`{|}~]/g, \" \")\n    return formatString;\n}\n\nfunction containsProtectedWords(stringIn) {\n    // return false;\n    let retVal = false;\n    PROTECTED_KEYWORDS.forEach(function (keyword) {\n        if (stringIn.includes(keyword)) {\n            if (stringIn.includes(\"just\")) {\n                console.log(stringIn);\n            }\n            retVal = true;\n            return;\n        }\n    })\n    return retVal;\n}\nexport default WordFrequency;","\nimport React from 'react'\nimport '../node_modules/react-vis/dist/style.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './style.css';\nimport MessagesPerPerson from './MessagesPerPerson.js'\nimport DayAndTimeHeatmap from './DayAndTimeHeatmap.js'\nimport TotalMessagesTimeseries from './TotalMessagesTimeseries.js'\nimport TotalMessagesHeatmap from './TotalMessagesHeatmap.js'\nimport WordFrequency from './WordFrequency.js'\n\nclass MessengerVis extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: props.data,\n            selection: props.visualization\n        }\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props !== prevProps) {\n            this.setState({ data: this.props.data, selection: this.props.visualization });\n        }\n    }\n\n    render() {\n        if (this.props.data == null) {\n            return null;\n        }\n        return (\n            <div className=\"main-screen-wrapper\">\n                <div className=\"visualization-wrapper\">\n                    <Visualization\n                        selection={this.state.selection}\n                        data={this.state.data}\n                    />\n                </div>\n            </div>\n        )\n    }\n}\nfunction Visualization(props) {\n    if (!props.data) return null;\n    switch (props.selection) {\n        case \"Messages per Person\":\n            return (\n                <MessagesPerPerson\n                    data={props.data}\n                />\n            );\n        case \"Day/Time Heatmap\":\n            return (\n                <DayAndTimeHeatmap\n                    data={props.data}\n                />\n            );\n        case \"Word Frequency\":\n            return (\n                <WordFrequency\n                    data={props.data}\n                />\n            )\n        case \"Total Messages Timeseries\":\n            return (\n                <TotalMessagesTimeseries\n                    data={props.data}\n                />\n            )\n        case \"Total Messages Heatmap\":\n            return (\n                <TotalMessagesHeatmap\n                    data={props.data}\n                />\n            )\n        default:\n            return (\n                <TotalMessagesHeatmap\n                    data={props.data}\n                />\n            )\n\n    }\n}\n\n\nexport default MessengerVis;","\nimport React from 'react';\nimport MessengerVis from './MessengerVis.js'\nimport { Jumbotron } from 'react-bootstrap'\nimport 'bootstrap/dist/js/bootstrap';\nimport 'jquery';\nimport './style.css';\n\nconst MENU_ITEMS = [\"Total Messages Heatmap\", \"Messages per Person\", \"Day/Time Heatmap\", \"Word Frequency\", \"Total Messages Timeseries\"] // Populates Navigation component\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            file: null,\n            data: null,\n            chatName: \"\",\n            visualization: \"Total Messages Heatmap\"\n        }\n        this.onFileSelect = this.onFileSelect.bind(this);\n        this.onVisualizationSelect = this.onVisualizationSelect.bind(this);\n    }\n\n    componentDidMount() {\n        document.title = \"Messenger Web Analyzer\"\n    }\n\n    render() {\n        return (\n            <div>\n                <ReselectBar\n                    active={this.state.data !== null}\n                    onChangeFile={this.onFileSelect}\n                    onChangeVisualization={this.onVisualizationSelect}\n                    chatName={this.state.chatName}\n                    visualization={this.state.visualization}\n                />\n                <WelcomeScreen\n                    active={this.state.file === null}\n                    onChange={this.onFileSelect}\n                />\n                <MessengerVis\n                    data={this.state.data}\n                    visualization={this.state.visualization}\n                />\n            </div>\n        )\n    }\n\n    onFileSelect(e) {\n        this.setState({ file: e.target.files[0] }, function () {\n\n            var fr = new FileReader();\n            const _this = this;\n            try {\n                fr.readAsText(this.state.file);\n            }\n            catch (e) {\n                alert(\"invalid file\");\n                return;\n            }\n            fr.onload = function (e) {\n                let data = JSON.parse(e.target.result);\n                _this.setState({ data: data, chatName: data.title });\n\n            };\n        });\n    }\n    onVisualizationSelect(visualization) {\n        this.setState({ visualization: visualization })\n    }\n}\n\nfunction WelcomeScreen(props) {\n    if (props.active) {\n        return (\n            <div className=\"welcome-style\">\n                <Jumbotron bsStyle=\"jumbotron-style\">\n                    <h1>Messenger Analyzer</h1>\n                    <p>\n                        Upload your messenger json file below to view stats about your messaging!\n                    </p>\n                    <span className=\"btn btn-outline-primary btn-file btn-lg\">\n                        Browse for Messenger JSON File<input onChange={props.onChange} type=\"file\" />\n                    </span>\n                </Jumbotron>\n            </div>\n        )\n    }\n    else {\n        return null;\n    }\n}\nfunction ReselectBar(props) {\n    if (props.active) {\n        let displayChatName;\n        if (props.chatName) {\n            if (props.chatName.length > 20) {\n                displayChatName = props.chatName.substring(0, 20) + \"...\";\n            }\n            else {\n                displayChatName = props.chatName;\n            }\n        }\n        return (\n            <div className=\"reselect-bar\">\n                {displayChatName && <h2 className=\"chat-name\" title={props.chatName}>{displayChatName}</h2>}\n                <div className=\"dropdown\">\n                    <button\n                        className=\"btn btn-outline-primary btn-file btn-lg dropdown-toggle\"\n                        type=\"button\"\n                        id=\"dropdownMenuButton\"\n                        data-toggle=\"dropdown\"\n                        aria-haspopup=\"true\"\n                        aria-expanded=\"false\"\n                    >\n                        {props.visualization}\n                    </button>\n                    <div\n                        className=\"dropdown-menu\"\n                        aria-labelledby=\"dropdownMenuButton\"\n                    >\n                        {MENU_ITEMS.map((item) =>\n                            <div\n                                key={item}\n                                onClick={() => props.onChangeVisualization(item)}\n                                className=\"dropdown-item\"\n                                href=\"#\">\n                                {item}\n                            </div>\n                        )}\n                    </div>\n                </div>\n                <span className=\"btn btn-outline-primary btn-file btn-lg\">\n                    Browse <input onChange={props.onChangeFile} type=\"file\" />\n                </span>\n            </div>\n        )\n    }\n    else {\n        return null;\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}